/* Generated By:JJTree&JavaCC: Do not edit this line. HLConstants.java */

/**
 * Token literal values and constants.
 * Generated by org.javacc.parser.OtherFilesGen#start()
 */
public interface HLConstants {

  /** End of File. */
  int EOF = 0;
  /** RegularExpression Id. */
  int EQ = 5;
  /** RegularExpression Id. */
  int GE = 6;
  /** RegularExpression Id. */
  int GT = 7;
  /** RegularExpression Id. */
  int LE = 8;
  /** RegularExpression Id. */
  int LT = 9;
  /** RegularExpression Id. */
  int NE = 10;
  /** RegularExpression Id. */
  int ADD = 11;
  /** RegularExpression Id. */
  int SUB = 12;
  /** RegularExpression Id. */
  int PROD = 13;
  /** RegularExpression Id. */
  int DIV = 14;
  /** RegularExpression Id. */
  int MOD = 15;
  /** RegularExpression Id. */
  int LPAREN = 16;
  /** RegularExpression Id. */
  int LSQUARE = 17;
  /** RegularExpression Id. */
  int RPAREN = 18;
  /** RegularExpression Id. */
  int RSQUARE = 19;
  /** RegularExpression Id. */
  int ASSIGN = 20;
  /** RegularExpression Id. */
  int AND = 21;
  /** RegularExpression Id. */
  int OR = 22;
  /** RegularExpression Id. */
  int NOT = 23;
  /** RegularExpression Id. */
  int COMMA = 24;
  /** RegularExpression Id. */
  int SEMICOL = 25;
  /** RegularExpression Id. */
  int COL = 26;
  /** RegularExpression Id. */
  int DOT = 27;
  /** RegularExpression Id. */
  int ANY = 28;
  /** RegularExpression Id. */
  int DO = 29;
  /** RegularExpression Id. */
  int ELIF = 30;
  /** RegularExpression Id. */
  int ELSE = 31;
  /** RegularExpression Id. */
  int FI = 32;
  /** RegularExpression Id. */
  int FOR = 33;
  /** RegularExpression Id. */
  int FUN = 34;
  /** RegularExpression Id. */
  int IF = 35;
  /** RegularExpression Id. */
  int IN = 36;
  /** RegularExpression Id. */
  int INT = 37;
  /** RegularExpression Id. */
  int LST = 38;
  /** RegularExpression Id. */
  int NUF = 39;
  /** RegularExpression Id. */
  int OD = 40;
  /** RegularExpression Id. */
  int PRINT = 41;
  /** RegularExpression Id. */
  int PRINTLN = 42;
  /** RegularExpression Id. */
  int RETURN = 43;
  /** RegularExpression Id. */
  int STR = 44;
  /** RegularExpression Id. */
  int THEN = 45;
  /** RegularExpression Id. */
  int WHILE = 46;
  /** RegularExpression Id. */
  int ISINT = 47;
  /** RegularExpression Id. */
  int ISSTR = 48;
  /** RegularExpression Id. */
  int ISLST = 49;
  /** RegularExpression Id. */
  int DIGIT = 50;
  /** RegularExpression Id. */
  int LETTER = 51;
  /** RegularExpression Id. */
  int INTEGER = 52;
  /** RegularExpression Id. */
  int IDENTIFIER = 53;
  /** RegularExpression Id. */
  int STRING = 54;
  /** RegularExpression Id. */
  int COMMENT_SINGLE = 55;

  /** Lexical state. */
  int DEFAULT = 0;

  /** Literal token values. */
  String[] tokenImage = {
    "<EOF>",
    "\" \"",
    "\"\\t\"",
    "\"\\n\"",
    "\"\\r\"",
    "\"=\"",
    "\">=\"",
    "\">\"",
    "\"<=\"",
    "\"<\"",
    "\"!=\"",
    "\"+\"",
    "\"-\"",
    "\"*\"",
    "\"/\"",
    "\"%\"",
    "\"(\"",
    "\"[\"",
    "\")\"",
    "\"]\"",
    "\":=\"",
    "\"&\"",
    "\"|\"",
    "\"!\"",
    "\",\"",
    "\";\"",
    "\":\"",
    "\".\"",
    "\"ANY\"",
    "\"DO\"",
    "\"ELIF\"",
    "\"ELSE\"",
    "\"FI\"",
    "\"FOR\"",
    "\"FUN\"",
    "\"IF\"",
    "\"IN\"",
    "\"INT\"",
    "\"LST\"",
    "\"NUF\"",
    "\"OD\"",
    "\"PRINT\"",
    "\"PRINTLN\"",
    "\"RETURN\"",
    "\"STR\"",
    "\"THEN\"",
    "\"WHILE\"",
    "\"ISINT\"",
    "\"ISSTR\"",
    "\"ISLST\"",
    "<DIGIT>",
    "<LETTER>",
    "<INTEGER>",
    "<IDENTIFIER>",
    "<STRING>",
    "<COMMENT_SINGLE>",
  };

}
